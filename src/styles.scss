// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
@import './assets/scss/variables.scss';
// Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$team-angular31-comfeco-primary: mat-palette($mat-deep-orange);
$team-angular31-comfeco-accent: mat-palette($mat-orange, A200, A100, A400);
// The warn palette is optional (defaults to red).
$team-angular31-comfeco-warn: mat-palette($mat-pink);
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$team-angular31-comfeco-theme: mat-light-theme(
	(
		color: (
			primary: $team-angular31-comfeco-primary,
			accent: $team-angular31-comfeco-accent,
			warn: $team-angular31-comfeco-warn
		)
	)
);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($team-angular31-comfeco-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
	*,
	*:focus,
	*:hover {
		outline: none;
	}
	padding: 0;
	margin: 0;
	height: 100%;
	width: 100%;
}

body {
	font-family: Roboto, 'Helvetica Neue', sans-serif;
	color: $color-text;
	font-size: 12px;
	input[type='text'] {
		color: $color-text;
	}
	.card {
		box-shadow: 0px 4px 17px 5px #b6b7b7 !important;
		border-radius: 20px;
	}
	.cdk-overlay-dark-backdrop {
		background: rgba(0, 0, 0, 0);
	}
	.blur {
		filter: blur(2px);
	}
	.url {
		color: #019df4;
		text-decoration: underline;
		cursor: pointer;
	}
	.modal-terms {
		.mat-dialog-container {
			border-radius: 40px;
			background-color: #ffefe7;
			color: $color-text-alternative;
			min-height: 70%;
			height: 450px;
			h2 {
				font-size: 13px;
				font-weight: bold;
			}
			p {
				font-size: 11px;
			}
			button {
				font-size: 12px;
			}
		}
	}
	.inputs {
		.mat-form-field-infix {
			width: 340px;
		}
	}
	.terms {
		.mat-checkbox-layout {
			white-space: pre;
			font-size: 9px;
			margin-top: 2em;
		}
	}
	.mat-snack-bar-container {
		color: white;
		text-align: center;
	}
	.mat-simple-snackbar {
		justify-content: center;
		font-size: 1em;
	}
	.snackbar-error {
		background-color: $color-error;
	}
	.snackbar-info {
		background-color: $color-secondary;
	}
	.mat-form-field-infix {
		width: auto;
	}
}

.no-select {
	-webkit-touch-callout: none;
	/* iOS Safari */
	-webkit-user-select: none;
	/* Safari */
	-khtml-user-select: none;
	/* Konqueror HTML */
	-moz-user-select: none;
	/* Old versions of Firefox */
	-ms-user-select: none;
	/* Internet Explorer/Edge */
	user-select: none;
	/* Non-prefixed version, currently supported by Chrome, Edge, Opera and Firefox */
}
